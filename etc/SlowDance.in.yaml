---
# If true, the FSM transitions are managed by an external tool
Managed: false
# If true and the FSM is self-managed, transitions should be triggered
StepByStep: true
# Change idle behaviour, if true the state is kept until transition,
# otherwise the FSM holds the last state until transition
IdleKeepState: true
# Where to look for state libraries
StatesLibraries:
- "@MC_STATES_DEFAULT_RUNTIME_INSTALL_PREFIX@"
- "@MC_STATES_RUNTIME_INSTALL_PREFIX@"
# Where to look for state files
StatesFiles:
- "@MC_STATES_DEFAULT_RUNTIME_INSTALL_PREFIX@/data"
- "@MC_STATES_RUNTIME_INSTALL_PREFIX@/data" # If true, state factory will be more verbose VerboseStateFactory: false
# Additional robots to load
robots:
  ground:
    module: env/ground
  chair:
    module: env/chair
    init_pos:
      translation: [0, 0, 0]
  ## We don't use the hrp4 section here to set the robot initial position
  # Instead it will be computed in InitialPose state
  # For reference, this is how you would set the robot initial pose from YAML
  # hrp4:
  #   init_pos:
  #     translation: [0, 0, 0.5]

# General constraints, always on
constraints:
- type: contact
- type: kinematics
  damper: [0.1, 0.01, 0.5]
- type: compoundJoint
# Collision constraint
collisions:
- type: collision
  useMinimal: true
# Initial set of contacts
contacts: []

default_seated_posture: &default_seated_posture
  R_HIP_Y: [0.0]
  R_HIP_R: [ -0.02]
  R_HIP_P: [-1.34]
  R_KNEE_P: [1.4]
  R_ANKLE_P: [0.1]
  R_ANKLE_R: [0.13]
  L_HIP_Y: [0.0]
  L_HIP_R: [ 0.02]
  L_HIP_P: [-1.34]
  L_KNEE_P: [1.4]
  L_ANKLE_P: [0.1]
  L_ANKLE_R: [-0.13]
  CHEST_P: [0.5]
  CHEST_Y: [0.0]
  NECK_Y: [0.0]
  NECK_P: [0.0]
  R_SHOULDER_P: [-0.052]
  R_SHOULDER_R: [-0.174444]
  R_SHOULDER_Y: [0.0]
  R_ELBOW_P: [-1.44]
  R_WRIST_Y: [0.0]
  R_WRIST_P: [0.0]
  R_WRIST_R: [0.0]
  R_HAND_J0: [0.0]
  R_HAND_J1: [0.0]
  L_SHOULDER_P: [-0.052]
  L_SHOULDER_R: [0.174444]
  L_SHOULDER_Y: [0.0]
  L_ELBOW_P: [-1.44]
  L_WRIST_Y: [0.0]
  L_WRIST_P: [0.0]
  L_WRIST_R: [0.0]
  L_HAND_J0: [0.0]
  L_HAND_J1: [0.0]

# Implement some additional text states
states:
  InitialPose:
    base: SlowDance_Initial
    buttock_offset:
      translation: [0.0, 0, 0.05]
      rotation: [0, -0.5, 0]

  # Inherit from this state if you want to start from the current posture
  # and only modify some joints
  CurrentPosture:
    base: Posture
    completion:
      AND:
        - eval: 0.6
        - speed: 0.1
    postureTask:
      stiffness: 10

  # Inherit from this state if you want to define a posture based on the default_seated_posture configuration
  DefaultSeatedPosture:
    base: CurrentPosture
    postureTask:
      target:
        <<: *default_seated_posture

  # Go the initial posture, that is the default_seated_posture defined above.
  # After reaching that posture, add contacts with the chair.
  # Note: This state is intended to be used with the robot in the air hanging from the ropes, and we will then lower it manually onto the chair
  #       In the future we can consider to write a controller to make it seat by itself, but that's much trickier
  InitialPosture:
    base: DefaultSeatedPosture
    AddContactsAfter:
      - r1: hrp4
        r2: chair
        r1Surface: Buttock
        r2Surface: Top
      - r1: hrp4
        r2: chair
        r1Surface: Back
        r2Surface: Back


  InterpolatePosture:
    base: SlowDance_InterpolatePosture
    posture_task:
      stiffness: 100
    posture_sequence:
      -
        - 0.0
        - R_SHOULDER_R: -1.5
          L_SHOULDER_R: 1.5
      -
        - 2.0
        - R_SHOULDER_Y: -1.5
          L_SHOULDER_Y: 1.5
      -
        - 4.0
        - R_SHOULDER_P: -2.56
          R_ELBOW_P: 0.0
          L_SHOULDER_P: -2.56
          L_ELBOW_P: 0.0

  Pause2s:
    base: Pause
    duration: 2

# Transitions map
transitions:
- [InitialPose, OK, InitialPosture, Auto]
- [InitialPosture, OK, Pause2s, Auto]
- [Pause2s, OK, InterpolatePosture, Auto]
# - [Pause2s, OK, ArmsUp, Auto]
# - [ArmsUp, OK, ShouldersUp, Auto]
# - [ShouldersUp, OK, ShouldersY, Auto]
# - [ShouldersY, OK, InitialPosture, Auto]
# Initial state
init: InitialPose
